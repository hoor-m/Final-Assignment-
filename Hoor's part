import tkinter as tk
import pickle

# Ticket data
TICKET_TYPES = [
    {"type": "Single-Day Pass", "price": 275},
    {"type": "Two-Day Pass", "price": 480},
    {"type": "Annual Membership", "price": 1840},
    {"type": "Child Ticket", "price": 185},
    {"type": "Group Ticket (10+)", "price": 220},
    {"type": "VIP Experience Pass", "price": 550},
]

# Save purchase orders to a binary file
def save_order(order_data):
    with open("orders.pkl", "ab") as file:
        pickle.dump(order_data, file)

class TicketPurchasingApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Ticket Purchasing Interface")

        # Header
        tk.Label(root, text="Adventure Land Tickets", font=("Arial", 16, "bold")).pack(pady=10)

        # Ticket selection
        tk.Label(root, text="Enter Ticket Type (e.g., Single-Day Pass):", font=("Arial", 12)).pack(anchor="w", padx=20)
        self.ticket_entry = tk.Entry(root)
        self.ticket_entry.pack(anchor="w", padx=20, pady=5)

        # Payment details
        tk.Label(root, text="Payment Information:", font=("Arial", 14)).pack(anchor="w", padx=20, pady=10)
        tk.Label(root, text="Name on Card:").pack(anchor="w", padx=30)
        self.card_name = tk.Entry(root)
        self.card_name.pack(anchor="w", padx=30)

        tk.Label(root, text="Card Number:").pack(anchor="w", padx=30)
        self.card_number = tk.Entry(root)
        self.card_number.pack(anchor="w", padx=30)

        tk.Label(root, text="Expiry Date (MM/YY):").pack(anchor="w", padx=30)
        self.card_expiry = tk.Entry(root)
        self.card_expiry.pack(anchor="w", padx=30)

        tk.Label(root, text="CVV:").pack(anchor="w", padx=30)
        self.card_cvv = tk.Entry(root, show="*")
        self.card_cvv.pack(anchor="w", padx=30)

        # Message display area
        self.message_label = tk.Label(root, text="", fg="red", font=("Arial", 12))
        self.message_label.pack(pady=10)

        # Buttons
        tk.Button(root, text="Purchase", command=self.process_purchase, bg="green", fg="white").pack(pady=10)
        tk.Button(root, text="Exit", command=root.quit, bg="red", fg="white").pack()

    def process_purchase(self):
        # Collect data
        ticket_type = self.ticket_entry.get().strip()
        name = self.card_name.get().strip()
        card_number = self.card_number.get().strip()
        expiry = self.card_expiry.get().strip()
        cvv = self.card_cvv.get().strip()

        # Validate fields
        if not all([ticket_type, name, card_number, expiry, cvv]):
            self.message_label.config(text="Please fill in all fields.", fg="red")
            return

        # Validate ticket type
        valid_ticket = next((t for t in TICKET_TYPES if t["type"].lower() == ticket_type.lower()), None)
        if not valid_ticket:
            self.message_label.config(text="Invalid ticket type entered.", fg="red")
            return

        # Save order
        order_data = {
            "ticket_type": valid_ticket["type"],
            "price": valid_ticket["price"],
            "name": name,
            "card_number": card_number,
            "expiry": expiry,
            "cvv": cvv
        }
        save_order(order_data)
        self.message_label.config(
            text=f"Successfully purchased: {valid_ticket['type']} for {valid_ticket['price']} DHS",
            fg="green"
        )
        self.reset_form()

    def reset_form(self):
        # Clear inputs
        self.ticket_entry.delete(0, tk.END)
        self.card_name.delete(0, tk.END)
        self.card_number.delete(0, tk.END)
        self.card_expiry.delete(0, tk.END)
        self.card_cvv.delete(0, tk.END)
        self.message_label.config(text="")

# Run the app
if __name__ == "__main__":
    root = tk.Tk()
    app = TicketPurchasingApp(root)
    root.mainloop()
